dependencies {

    implementation project(':crypto-spi')
    implementation project(':schema-spi')
    implementation project(':crypto-providers-kafkakms') //todo service locator / dynamic factory

    implementation 'org.apache.kafka:kafka-clients:3.2.3'

    testImplementation "org.testcontainers:testcontainers:1.20.6"
    testImplementation "org.testcontainers:junit-jupiter:1.20.6"
    testImplementation "org.testcontainers:redpanda:1.20.6"

    // To fully test the dynamic class instantiation, we test against all available schema providers
    testImplementation "com.google.protobuf:protobuf-java:${rootProject.ext.versions.protobufJava}"
    testImplementation "org.apache.avro:avro:1.11.4"

    // TODO: Adopt test features in a way it includes generated source code
    // ref.: for further reading
    // https://docs.gradle.org/5.6/release-notes.html#test-fixtures-for-java-projects
    // https://docs.gradle.org/current/userguide/java_testing.html#sec:java_test_fixtures
    // https://stackoverflow.com/questions/58963413/is-the-java-test-fixtures-plugin-incompatible-with-the-build-and-run-using-intel
    // https://github.com/gradle/gradle/blob/f8ea607a7dfe0f8715e3bf656df7414a415449b5/subprojects/plugins/src/main/java/org/gradle/api/plugins/JavaTestFixturesPlugin.java
    testImplementation project(':schema-providers-protobuf').sourceSets.test.output
    testImplementation project(':schema-providers-protobuf')
    testImplementation project(':schema-providers-avro').sourceSets.test.output
    testImplementation project(':schema-providers-avro')
}
