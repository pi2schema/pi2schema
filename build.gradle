plugins {
    alias(libs.plugins.release)
    alias(libs.plugins.spotbugs) apply false
    alias(libs.plugins.spotless)

    //applied only in specific subprojects, yet important to define globally
    alias(exampleLibs.plugins.kotlin.jvm) apply false
    alias(exampleLibs.plugins.kotlin.spring) apply false
    alias(exampleLibs.plugins.spring.dependency.management) apply false
    alias(exampleLibs.plugins.spring.boot) apply false
    alias(libs.plugins.avro) apply false
    alias(libs.plugins.protobuf) apply false
}

allprojects {

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'com.github.spotbugs'
    apply plugin: 'com.diffplug.spotless'
    apply plugin: 'maven-publish'

    group 'com.github.pi2schema'
    version project.version

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }

    spotless {
        java {
            target 'src/*/java/**/*.java'

            toggleOffOn()
            removeUnusedImports()
            trimTrailingWhitespace()
            endWithNewline()

            prettier(['prettier': '3.0.3', 'prettier-plugin-java': '2.3.1'])
                    .config([
                            'parser'    : 'java',
                            'tabWidth'  : 4,
                            'printWidth': 120,
                            'plugins': ['prettier-plugin-java']
                    ])

            importOrder('', 'java', 'javax', '\\#')
        }
    }

    repositories {
        mavenCentral()

        //confluent jars are found on mavencentral but pom descriptors are missing causing gradle to fail
        maven { url 'https://packages.confluent.io/maven/' }
    }
}

subprojects {

    dependencies {

        implementation libs.logback.classic

        // JUnit dependencies with centralized version
        testImplementation libs.bundles.testing
        
    }

    test {
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
        }
    }

// do not run spot bugs on test for the time being
    spotbugsTest {
        enabled false
    }

    spotbugs {
        // https://github.com/spotbugs/spotbugs-gradle-plugin#readme
        ignoreFailures = true // will not crash the build
    }

	publishing {
		repositories {
			maven {
				name = "GitHubPackages"
				url = uri("https://maven.pkg.github.com/pi2schema/pi2schema")
				credentials {
					username = System.getenv("GITHUB_ACTOR")
					password = System.getenv("GITHUB_TOKEN")
				}
			}
		}
		publications {
			gpr(MavenPublication) {
				from(components.java)
			}
		}
	}
}

//task codeCoverageReport(type: JacocoReport) {
//    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")
//
//    subprojects.each {
//        sourceSets it.sourceSets.main
//    }
//}
//
//tasks.test {
//    finalizedBy(tasks.codeCoverageReport) // report is always generated after tests run
//}

//check.dependsOn codeCoverageReport