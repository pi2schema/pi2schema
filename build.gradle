allprojects {

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'jacoco'
    apply plugin: 'maven-publish'

    group 'com.github.pi2schema'
    version '0.2.0-SNAPSHOT'

    repositories {
        mavenCentral()

        //confluent jars are found on mavencentral but pom descriptors are missing causing gradle to fail
        maven { url 'https://packages.confluent.io/maven/' }
    }
}

subprojects {

    java {
        sourceCompatibility(JavaVersion.VERSION_11)
        targetCompatibility(JavaVersion.VERSION_11)
    }

    dependencies {

        compile 'ch.qos.logback:logback-classic:1.2.3'

        testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
        testImplementation 'org.junit.jupiter:junit-jupiter-params:5.7.0'
        testImplementation 'org.assertj:assertj-core:3.17.2'
        testImplementation 'org.apache.commons:commons-lang3:3.11'
        testImplementation 'org.awaitility:awaitility:4.0.3'
        testImplementation 'org.mockito:mockito-core:3.5.10'
        testImplementation 'org.mockito:mockito-junit-jupiter:3.5.10'

    }

    test {
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
        }
    }

	publishing {
		repositories {
			maven {
				name = "GitHubPackages"
				url = uri("https://maven.pkg.github.com/pi2schema/pi2schema")
				credentials {
					username = System.getenv("GITHUB_ACTOR")
					password = System.getenv("GITHUB_TOKEN")
				}
			}
		}
		publications {
			gpr(MavenPublication) {
				from(components.java)
			}
		}
	}
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        html.enabled false
        csv.enabled false
    }
}

codeCoverageReport.dependsOn {
    subprojects*.test
}

check.dependsOn codeCoverageReport