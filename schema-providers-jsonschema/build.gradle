plugins {
    id 'java-test-fixtures'
    alias(libs.plugins.jsonschema2pojo)

}

// remove auto generated proto classes used for the serialization persistence.
spotbugs {
    onlyAnalyze = ['pi2schema.schema.providers.jsonschema.*']
}

dependencies {
    implementation project(':crypto-spi')
    implementation project(':schema-spi')
    
    // JSON processing dependencies
    implementation libs.bundles.jackson
    implementation libs.commons.beanutils
    
    // Testing dependencies
    testImplementation libs.junit.jupiter
    testImplementation libs.assertj.core
    testImplementation libs.mockito.core
    testImplementation libs.mockito.junit.jupiter
    testImplementation libs.instancio.junit
}

jsonSchema2Pojo {
    source = files("src/main/resources/jsonschema", "src/test/resources/jsonschema")
    targetPackage = 'pi2schema.schema.providers.jsonschema.model'
    generateBuilders = true
    includeAdditionalProperties = false
    includeConstructors = true
    includeToString = true
    includeHashcodeAndEquals = true
    serializable = false
    useBigDecimals = false
    useJodaDates = false
    useCommonsLang3 = true
}


// Unfortunately, the jsonschema2pojo plugin does not support multiple target destinations mixing up src/main and src/test.
// So we have to exclude the generated classes from the jar file in order to avoid publishing test classes.
// https://groups.google.com/g/jsonschema2pojo-users/c/snoN4Jz5qDk
jar {
    exclude 'com/acme/**'
}