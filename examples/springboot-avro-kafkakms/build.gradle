plugins {
	alias(libs.plugins.spring.dependency.management)
	alias(libs.plugins.spring.boot)
	alias(libs.plugins.kotlin.jvm)
	alias(libs.plugins.kotlin.spring)
	alias(libs.plugins.avro)
}


group = "com.acme"
version = "0.0.2-SNAPSHOT"

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}


dependencies {
	implementation(project(":schema-providers-avro"))
	implementation(project(":serialization-adapters-kafka"))

	implementation libs.confluent.kafka.avro.serializer
	implementation libs.avro
	implementation libs.spring.boot.starter.webflux
	implementation libs.jackson.module.kotlin
	implementation libs.reactor.kotlin.extensions
	implementation libs.kafka.streams
	implementation libs.kotlin.reflect
	implementation libs.kotlin.stdlib.jdk8
	implementation libs.kotlinx.coroutines.reactor
	implementation libs.spring.kafka

	testImplementation(libs.spring.boot.starter.test) {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation libs.reactor.test
	testImplementation libs.spring.kafka.test

	testImplementation libs.spring.boot.testcontainers

	testImplementation libs.bundles.testcontainers
}


compileKotlin {
	dependsOn(":examples:springboot-avro-kafkakms:generateTestAvroJava")
	kotlinOptions.freeCompilerArgs = ["-Xjsr305=strict"]
	kotlinOptions.jvmTarget = "17"
}


spotbugs {
	onlyAnalyze = ['com.acme.sample.*']
}
